rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOrgMember(orgId) {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.organizationId == orgId;
    }

    function isAdmin() {
      return isAuthenticated() &&
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function userHasNoOrg() {
      return !exists(/databases/$(database)/documents/users/$(request.auth.uid));
    }

    // Organizations
    match /organizations/{orgId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
                   (request.auth.uid + '-org' == orgId || 
                    (exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'));
      allow update, delete: if isOrgMember(orgId) && isAdmin();
    }

    // Users
    match /users/{userId} {
      allow read: if isAuthenticated();
      // Allow creating own user document during signup
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && 
                   (request.auth.uid == userId || 
                    (exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'));
    }

    match /invitations/{invitationId} {
      allow read, create: if isAuthenticated();
      
      match /resends/{resendId} {
        allow create: if isAuthenticated() && 
                     exists(/databases/$(database)/documents/invitations/$(invitationId)) &&
                     get(/databases/$(database)/documents/invitations/$(invitationId)).data.invitedBy == request.auth.uid;
      }
    }

    // Add rules for reports collection
    match /reports/{reportId} {
      allow read: if isAuthenticated() && 
                 request.auth.uid == resource.data.userId;
      allow create: if isAuthenticated();
    }

    // Simplified fileUploads rules
    match /fileUploads/{uploadId} {
      allow read: if isAuthenticated() && 
                 request.auth.uid == resource.data.userId;
      allow create: if isAuthenticated() && isAdmin();
      allow delete: if isAuthenticated() && 
                   request.auth.uid == resource.data.userId;
    }

    // Basic rules for other collections
    match /{collection}/{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
  }
} 
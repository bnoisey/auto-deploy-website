steps:
  # Restore npm cache
  - name: 'node:18'
    entrypoint: bash
    args:
      - '-c'
      - |
        apt-get update && apt-get install -y google-cloud-sdk # Install gsutil
        echo "Checking for node_modules cache..."
        mkdir -p /workspace/node_modules
        if gsutil stat gs://webdesigntest-12d11_cloudbuild/node_modules.tar.gz; then
          echo "Cache exists - restoring from GCS"
          gsutil cp gs://webdesigntest-12d11_cloudbuild/node_modules.tar.gz /workspace/
          tar -xzf node_modules.tar.gz
          rm node_modules.tar.gz
          echo "Cache restored successfully"
        else
          echo "Cache miss - clean install will be performed"
        fi
        ls -la /workspace/node_modules

  # Install dependencies
  - name: 'node:18'
    entrypoint: bash
    args:
      - '-c'
      - |
        apt-get update && apt-get install -y google-cloud-sdk # Install gsutil
        npm ci
    id: 'install'

  # Save npm cache
  - name: 'node:18'
    entrypoint: bash
    args:
      - '-c'
      - |
        if [ -d "node_modules" ] && [ "$(ls -A node_modules)" ]; then
          echo "Creating node_modules cache..."
          tar -czf node_modules.tar.gz node_modules/
          gsutil cp node_modules.tar.gz gs://webdesigntest-12d11_cloudbuild/node_modules.tar.gz
          echo "Cache saved successfully"
        else
          echo "No node_modules directory or empty directory - skipping cache"
        fi
    waitFor: ['install']

  # Restore Next.js build cache
  - name: 'node:18'
    entrypoint: bash
    args:
      - '-c'
      - |
        apt-get update && apt-get install -y google-cloud-sdk
        gsutil -m cp -r gs://webdesigntest-12d11_cloudbuild/.next/* /workspace/.next/
    id: 'restore-next-cache'
    waitFor: ['-']
    allowFailure: true

  # Build the Next.js application
  - name: 'node:18'
    entrypoint: bash
    args:
      - '-c'
      - |
        echo "Verifying environment..."
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "Directory contents:"
        ls -la
        echo "Starting Next.js build..."
        npm run build
    env:
      - 'NODE_ENV=production'
      - 'NEXT_PUBLIC_FIREBASE_API_KEY=${_FIREBASE_API_KEY}'
      - 'NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${_FIREBASE_AUTH_DOMAIN}'
      - 'NEXT_PUBLIC_FIREBASE_PROJECT_ID=${_FIREBASE_PROJECT_ID}'
      - 'NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${_FIREBASE_STORAGE_BUCKET}'
      - 'NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${_FIREBASE_MESSAGING_SENDER_ID}'
      - 'NEXT_PUBLIC_FIREBASE_APP_ID=${_FIREBASE_APP_ID}'
      - 'EMAIL_USER=brad@covelane.health'
      - 'EMAIL_APP_PASSWORD=$_EMAIL_APP_PASSWORD'
    secretEnv: ['_EMAIL_APP_PASSWORD']
    id: 'build'
    waitFor: ['install', 'restore-next-cache']

  # Save Next.js build cache
  - name: 'gcr.io/cloud-builders/gsutil'
    args: ['-m', 'cp', '-r', '/workspace/.next/*', 'gs://webdesigntest-12d11_cloudbuild/.next/']
    waitFor: ['build']

  # Build the container image with layer caching
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/webdesigntest-12d11/${_SERVICE_NAME}:$COMMIT_SHA'
      - '--cache-from'
      - 'gcr.io/webdesigntest-12d11/${_SERVICE_NAME}:latest'
      - '--build-arg'
      - 'NEXT_PUBLIC_FIREBASE_API_KEY=${_FIREBASE_API_KEY}'
      - '--build-arg'
      - 'NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${_FIREBASE_AUTH_DOMAIN}'
      - '--build-arg'
      - 'NEXT_PUBLIC_FIREBASE_PROJECT_ID=${_FIREBASE_PROJECT_ID}'
      - '--build-arg'
      - 'NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${_FIREBASE_STORAGE_BUCKET}'
      - '--build-arg'
      - 'NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${_FIREBASE_MESSAGING_SENDER_ID}'
      - '--build-arg'
      - 'NEXT_PUBLIC_FIREBASE_APP_ID=${_FIREBASE_APP_ID}'
      - '.'
    id: 'docker-build'
    waitFor: ['build']

  # Tag the image as latest for future cache
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'tag'
      - 'gcr.io/webdesigntest-12d11/${_SERVICE_NAME}:$COMMIT_SHA'
      - 'gcr.io/webdesigntest-12d11/${_SERVICE_NAME}:latest'
    waitFor: ['docker-build']

  # Enable Firebase web frameworks and deploy to Firebase Hosting
  - name: 'node:18'
    entrypoint: bash
    args:
      - '-c'
      - |
        echo "Setting up Firebase deployment..."
        mkdir -p /workspace/firebase-tools
        cd /workspace/firebase-tools
        npm init -y
        npm install firebase-tools@latest --no-save
        cd /workspace
        echo "Checking Firebase CLI version..."
        /workspace/firebase-tools/node_modules/.bin/firebase --version
        echo "Enabling web frameworks experiment..."
        /workspace/firebase-tools/node_modules/.bin/firebase experiments:enable webframeworks --token $_FIREBASE_TOKEN --non-interactive
        echo "Active service account:"
        echo "gcloud auth list output:"
        gcloud auth list 2>&1
        sleep 10
        echo "Starting Firebase deployment..."
        /workspace/firebase-tools/node_modules/.bin/firebase deploy --only hosting --token $_FIREBASE_TOKEN --json --non-interactive --project ${_FIREBASE_PROJECT_ID}
    secretEnv: ['_FIREBASE_TOKEN']
    waitFor: ['build']

  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image'
      - 'gcr.io/webdesigntest-12d11/${_SERVICE_NAME}:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port=3000'
      - '--service-account=firebase-deployer@webdesigntest-12d11.iam.gserviceaccount.com'

images:
  - 'gcr.io/webdesigntest-12d11/${_SERVICE_NAME}:$COMMIT_SHA'
  - 'gcr.io/webdesigntest-12d11/${_SERVICE_NAME}:latest'

substitutions:
  _SERVICE_NAME: clh-dev-website
  _REGION: us-central1
  _FIREBASE_API_KEY: AIzaSyD2ZeFKBfqqZ0Qxvz_6wMWXlpf0LRiFLzQ
  _FIREBASE_AUTH_DOMAIN: webdesigntest-12d11.firebaseapp.com
  _FIREBASE_PROJECT_ID: webdesigntest-12d11
  _FIREBASE_STORAGE_BUCKET: webdesigntest-12d11.firebasestorage.app
  _FIREBASE_MESSAGING_SENDER_ID: '504944796544'
  _FIREBASE_APP_ID: 1:504944796544:web:b14fcaa569d03ce2499765

availableSecrets:
  secretManager:
    - versionName: 'projects/504944796544/secrets/_FIREBASE_TOKEN/versions/latest' #Update with the actual resource name
      env: '_FIREBASE_TOKEN'
    - versionName: 'projects/504944796544/secrets/_EMAIL_APP_PASSWORD/versions/latest'
      env: '_EMAIL_APP_PASSWORD'

options:
  logging: CLOUD_LOGGING_ONLY

timeout: '1800s'
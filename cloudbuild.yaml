steps:
  # Restore npm cache
  - name: 'node:18'
    entrypoint: bash
    args:
      - '-c'
      - |
        if [ -d /workspace/node_modules ]; then
          echo "Cache exists"
        else
          echo "Cache miss - restoring from GCS"
          gsutil -m cp -r gs://webdesigntest-12d11_cloudbuild/node_modules/* /workspace/node_modules/ || true
        fi

  # Install dependencies
  - name: 'node:18'
    entrypoint: npm
    args: ['ci']
    id: 'install'

  # Save npm cache
  - name: 'gcr.io/cloud-builders/gsutil'
    args: ['-m', 'cp', '-r', '/workspace/node_modules/*', 'gs://webdesigntest-12d11_cloudbuild/node_modules/']
    waitFor: ['install']

  # Restore Next.js build cache
  - name: 'gcr.io/cloud-builders/gsutil'
    args: ['-m', 'cp', '-r', 'gs://webdesigntest-12d11_cloudbuild/.next/*', '/workspace/.next/']
    id: 'restore-next-cache'
    waitFor: ['-']
    allowFailure: true

  # Build the Next.js application
  - name: 'node:18'
    entrypoint: npm
    args: ['run', 'build']
    env:
      - 'NODE_ENV=production'
      - 'NEXT_PUBLIC_FIREBASE_API_KEY=AIzaSyD2ZeFKBfqqZ0Qxvz_6wMWXlpf0LRiFLzQ'
      - 'NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=webdesigntest-12d11.firebaseapp.com'
      - 'NEXT_PUBLIC_FIREBASE_PROJECT_ID=webdesigntest-12d11'
      - 'NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=webdesigntest-12d11.firebasestorage.app'
      - 'NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=504944796544'
      - 'NEXT_PUBLIC_FIREBASE_APP_ID=1:504944796544:web:b14fcaa569d03ce2499765'
    id: 'build'
    waitFor: ['install', 'restore-next-cache']

  # Save Next.js build cache
  - name: 'gcr.io/cloud-builders/gsutil'
    args: ['-m', 'cp', '-r', '/workspace/.next/*', 'gs://webdesigntest-12d11_cloudbuild/.next/']
    waitFor: ['build']

  # Build the container image with layer caching
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/webdesigntest-12d11/${_SERVICE_NAME}:$COMMIT_SHA'
      - '--cache-from'
      - 'gcr.io/webdesigntest-12d11/${_SERVICE_NAME}:latest'
      - '--build-arg'
      - 'NEXT_PUBLIC_FIREBASE_API_KEY=AIzaSyD2ZeFKBfqqZ0Qxvz_6wMWXlpf0LRiFLzQ'
      - '--build-arg'
      - 'NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=webdesigntest-12d11.firebaseapp.com'
      - '--build-arg'
      - 'NEXT_PUBLIC_FIREBASE_PROJECT_ID=webdesigntest-12d11'
      - '--build-arg'
      - 'NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=webdesigntest-12d11.firebasestorage.app'
      - '--build-arg'
      - 'NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=504944796544'
      - '--build-arg'
      - 'NEXT_PUBLIC_FIREBASE_APP_ID=1:504944796544:web:b14fcaa569d03ce2499765'
      - '.'
    id: 'docker-build'
    waitFor: ['build']

  # Tag the image as latest for future cache
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'tag'
      - 'gcr.io/webdesigntest-12d11/${_SERVICE_NAME}:$COMMIT_SHA'
      - 'gcr.io/webdesigntest-12d11/${_SERVICE_NAME}:latest'
    waitFor: ['docker-build']

  # Enable Firebase web frameworks and deploy to Firebase Hosting
  - name: 'node:18'
    entrypoint: bash
    args:
      - '-c'
      - |
        echo "Installing firebase-tools..."
        npm install -g firebase-tools@latest
        echo "Enabling web frameworks experiment..."
        firebase experiments:enable webframeworks
        echo "Starting Firebase deployment..."
        firebase deploy --project webdesigntest-12d11 --only hosting --token $_FIREBASE_TOKEN --debug
    env:
      - 'FIREBASE_API_KEY=AIzaSyD2ZeFKBfqqZ0Qxvz_6wMWXlpf0LRiFLzQ'
      - 'FIREBASE_AUTH_DOMAIN=webdesigntest-12d11.firebaseapp.com'
      - 'FIREBASE_PROJECT_ID=webdesigntest-12d11'
      - 'FIREBASE_STORAGE_BUCKET=webdesigntest-12d11.firebasestorage.app'
      - 'FIREBASE_MESSAGING_SENDER_ID=504944796544'
      - 'FIREBASE_APP_ID=1:504944796544:web:b14fcaa569d03ce2499765'
      - 'NEXT_PUBLIC_FIREBASE_API_KEY=AIzaSyD2ZeFKBfqqZ0Qxvz_6wMWXlpf0LRiFLzQ'
      - 'NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=webdesigntest-12d11.firebaseapp.com'
      - 'NEXT_PUBLIC_FIREBASE_PROJECT_ID=webdesigntest-12d11'
      - 'NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=webdesigntest-12d11.firebasestorage.app'
      - 'NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=504944796544'
      - 'NEXT_PUBLIC_FIREBASE_APP_ID=1:504944796544:web:b14fcaa569d03ce2499765'
    waitFor: ['docker-build']

  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image'
      - 'gcr.io/webdesigntest-12d11/${_SERVICE_NAME}:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '3000'
      - '--service-account=firebase-deployer@webdesigntest-12d11.iam.gserviceaccount.com'
      - '--set-env-vars'
      - 'NEXT_PUBLIC_FIREBASE_API_KEY=AIzaSyD2ZeFKBfqqZ0Qxvz_6wMWXlpf0LRiFLzQ,NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=webdesigntest-12d11.firebaseapp.com,NEXT_PUBLIC_FIREBASE_PROJECT_ID=webdesigntest-12d11,NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=webdesigntest-12d11.firebasestorage.app,NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=504944796544,NEXT_PUBLIC_FIREBASE_APP_ID=1:504944796544:web:b14fcaa569d03ce2499765'

images:
  - 'gcr.io/webdesigntest-12d11/${_SERVICE_NAME}:$COMMIT_SHA'
  - 'gcr.io/webdesigntest-12d11/${_SERVICE_NAME}:latest'

substitutions:
  _SERVICE_NAME: clh-dev-website
  _REGION: us-central1
  _FIREBASE_TOKEN: ${_FIREBASE_TOKEN}

options:
  logging: CLOUD_LOGGING_ONLY

timeout: '1800s'